var XdRsData=XdRsData||{};XdRsData.ce={};XdRsData.ce.parameters=PluginManager.parameters("XdRs_CopyEvent");XdRsData.ce.eventData=function(eventId){return this._eventsData?this._eventsData[eventId]:null};XdRsData.ce.isEffective=function(eventId){return!!this.eventData(eventId)};XdRsData.ce.loadBaseEvents=function(){const id=+(this.parameters["baseMapId"]||0);this._eventsData=null;this._isDataLoaded=id===0;if(!this._isDataLoaded){const xhr=new XMLHttpRequest;const url="data/"+"Map%1.json".format(id.padZero(3));xhr.open("GET",url);xhr.overrideMimeType("application/json");xhr.onload=()=>this.onDataLoad(xhr);xhr.onerror=()=>this.onDataError();xhr.send()}};XdRsData.ce.onDataLoad=function(xhr){if(xhr.status<400){const data=JSON.parse(xhr.responseText);this._eventsData=data.events;this._isDataLoaded=true}else this.onDataError()};XdRsData.ce.onDataError=function(){this._isDataLoaded=true;console.error("复制事件的事件存放地图ID未设置，或地图不存在！！！")};XdRsData.ce.DataManager_loadDatabase=DataManager.loadDatabase;DataManager.loadDatabase=function(){XdRsData.ce.loadBaseEvents();XdRsData.ce.DataManager_loadDatabase.call(this)};XdRsData.ce.DataManager_isDatabaseLoaded=DataManager.isDatabaseLoaded;DataManager.isDatabaseLoaded=function(){return XdRsData.ce._isDataLoaded&&XdRsData.ce.DataManager_isDatabaseLoaded.call(this)};PluginManager.registerCommand("XdRs_CopyEvent","AddCopyEvent",(args=>{const id=+(args.baseId||0);if(XdRsData.ce.isEffective(id)){const mapId=+(args.mapId||0);const x=args.x;const y=args.y;var d=+(args.direction||2);d=Math.max(2,Math.min(8,Math.floor(d/2)*2));if(!mapId||mapId===$gameMap.mapId()){$gameMap.addNewCopyEvent(id,x,y,d)}else{$gameSystem.saveReplicatedEvent(mapId,0,id,x,y,d)}}}));PluginManager.registerCommand("XdRs_CopyEvent","RemoveCopyEvent",(args=>{const id=+(args.baseId||0);if(XdRsData.ce.isEffective(id)){const mapId=+(args.mapId||0);const whole=!!eval(args.whole);if(!mapId||mapId===$gameMap.mapId()){$gameMap.removeCopyEvent(id,whole)}else{$gameSystem.removeReplicatedEventsData(mapId,id,whole)}}}));Game_System.prototype.replicatedEvents=function(mapId){if(!this._replicatedEvents)return[];return this._replicatedEvents[mapId]||[]};Game_System.prototype.saveReplicatedEvent=function(mapId,eventId,baseId,x,y,d){this._replicatedEvents=this._replicatedEvents||{};this._replicatedEvents[mapId]=this._replicatedEvents[mapId]||[];this._replicatedEvents[mapId].push({id:eventId,baseId:baseId,x:x,y:y,d:d})};Game_System.prototype.removeReplicatedEvent=function(mapId,eventId){const events=this.replicatedEvents(mapId);for(var i=0;i<events.length;++i){if(events[i].id===eventId){events.splice(i,1);break}}};Game_System.prototype.removeReplicatedEventsData=function(mapId,baseId,whole){const events=this.replicatedEvents(mapId);for(var i=0;i<events.length;++i){if(events[i].baseId===baseId){events.splice(i,1);if(whole)i--;else break}}};Game_System.prototype.refreshReplicatedEventPosition=function(mapId,eventId,x,y,d){const events=this.replicatedEvents(mapId);for(var i=0;i<events.length;++i){if(events[i].id===eventId){events[i].x=x;events[i].y=y;events[i].d=d}}};XdRsData.ce.Game_Map_setupEvents=Game_Map.prototype.setupEvents;Game_Map.prototype.setupEvents=function(){XdRsData.ce.Game_Map_setupEvents.call(this);this.setupCopyEvents()};Game_Map.prototype.setupCopyEvents=function(){const events=$gameSystem.replicatedEvents(this._mapId);for(var i=0;i<events.length;++i){var id=events[i].baseId,x=events[i].x;var y=events[i].y,d=events[i].d;events[i].id=this.addCopyEvent(id,x,y,d)}};Game_Map.prototype.addCopyEvent=function(baseId,x,y,d){if(XdRsData.ce.isEffective(baseId)){var id=1;while(this._events[id])id++;this._events[id]=new Game_Event(this._mapId,id,baseId);this._events[id].locate(x,y);this._events[id].setDirection(d);return id}return 0};Game_Map.prototype.addNewCopyEvent=function(baseId,x,y,d){if(!this._addCopyEventForSpriteset)return;const eventId=this.addCopyEvent(baseId,x,y);if(eventId>0){$gameSystem.saveReplicatedEvent(this._mapId,eventId,baseId,x,y,d);this._addCopyEventForSpriteset(this._events[eventId])}};Game_Map.prototype.removeCopyEvent=function(baseId,whole){if(!this._removeCopyEventForSpriteset)return;for(var i=1;i<this._events.length;++i){var event=this._events[i];if(event&&event._baseEventId===baseId){$gameSystem.removeReplicatedEvent(this._mapId,i);this._removeCopyEventForSpriteset(event);this._events[i]=null;if(!whole)break}}};Game_Map.prototype.saveReplicatedEventsPosition=function(){for(var i=1;i<this._events.length;++i){var event=this._events[i];if(event&&event.isCopy()){var x=event.x,y=event.y,d=event.direction();$gameSystem.refreshReplicatedEventPosition(this._mapId,i,x,y,d)}}};XdRsData.ce.Game_Event_initialize=Game_Event.prototype.initialize;Game_Event.prototype.initialize=function(mapId,eventId,baseId){this._baseEventId=baseId;XdRsData.ce.Game_Event_initialize.call(this,mapId,eventId)};Game_Event.prototype.isCopy=function(){return!!this._baseEventId};XdRsData.ce.Game_Event_event=Game_Event.prototype.event;Game_Event.prototype.event=function(){if(this.isCopy())return XdRsData.ce.eventData(this._baseEventId);return XdRsData.ce.Game_Event_event.call(this)};XdRsData.ce.Spriteset_Map_initialize=Spriteset_Map.prototype.initialize;Spriteset_Map.prototype.initialize=function(){XdRsData.ce.Spriteset_Map_initialize.call(this);$gameMap._addCopyEventForSpriteset=this.addCopyEvent.bind(this);$gameMap._removeCopyEventForSpriteset=this.removeCopyEvent.bind(this)};Spriteset_Map.prototype.addCopyEvent=function(event){const sprite=new Sprite_Character(event);this._characterSprites.push(sprite);this._tilemap.addChild(sprite)};Spriteset_Map.prototype.removeCopyEvent=function(event){const sprite=this.findTargetSprite(event);if(sprite){this._characterSprites.remove(sprite);this._tilemap.removeChild(sprite);sprite.destroy()}};XdRsData.ce.Scene_Map_terminate=Scene_Map.prototype.terminate;Scene_Map.prototype.terminate=function(){$gameMap.saveReplicatedEventsPosition();XdRsData.ce.Scene_Map_terminate.call(this)};